name: Release
on:
  push:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ vars.MYBOT_APP_ID }}
          private_key: ${{ secrets.MYBOT_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Package
        run: npm run package
      - name: Create publish package.json
        run: |
          # Create a copy of package.json for publishing
          cp package.json package-publish.json
          # Remove unwanted fields from the publish version
          npm pkg delete dependencies devDependencies scripts --prefix . --package package-publish.json
          # Move the publish version to be the main package.json for semantic-release
          mv package-publish.json package.json
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Restore original package.json
        if: always()
        run: |
          # Restore the original package.json from git
          git checkout HEAD -- package.json
